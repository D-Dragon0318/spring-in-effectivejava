spring:
  datasource:
    url: jdbc:h2:mem:tacocloud;NON_KEYWORDS=user
    generate-unique-name: false
    name: tacocloud
  data:
    rest:
     base-path: /data-api
  kafka:
    bootstrap-servers:
    - localhost:9092
    producer:
      keySerializer: org.springframework.kafka.support.serializer.JsonSerializer
      valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      groupId: code
      keyDeserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
#启用HTTPS   
server:
  port: 8081
#  ssl:
#    key-store: file:///C:/Users/Administrator/mykeys.jks
#    key-store-password: letmein
#    key-password: letmein
    
#配置日志目录，设置日志级别，书中的配置是有问题的
logging:
   file:
#     path: /var/logs/
#     name: demo2.log    #这里并不会直接引用path这个路径，而是在项目根目录中
     name: /var/logs/tacoCloud.log
   level:
     root: INFO
     org:
       springframework:
         security: OFF   
         messaging: OFF      
       apache:
         kafka: OFF
   
                  
#公共配置属性
taco:
   orders:
     pageSize: 130
     
tacocloud:
  email:
    host: imap.163.com
    mailbox: INBOX
    username: 2024
    password: 123
    poll-rate: 10000
    
    
    